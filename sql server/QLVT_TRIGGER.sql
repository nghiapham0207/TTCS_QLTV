USE QLTV
GO

CREATE TRIGGER TR_AFTERINSERT_PHIEUMUONTRA
ON PHIEUMUONTRA
AFTER INSERT 
AS
BEGIN
	UPDATE PHIEUMUONTRA
	 	SET NGAYHENTRA = DATEADD( DAY, 7, (SELECT NGAYMUON FROM inserted) ) 
    WHERE SOPHIEU = (SELECT SOPHIEU FROM inserted)
END

GO
CREATE TRIGGER TR_AFTERINSERT_CTMUONTRA
ON CTMUONTRA
AFTER INSERT 
AS
BEGIN
	UPDATE CUONSACH
	 	SET DAMUON = 1 
    WHERE MAS = (SELECT MAS FROM inserted)
END

GO
CREATE TRIGGER TR_AFTERDELETE_CTMUONTRA
ON CTMUONTRA
AFTER DELETE
AS
BEGIN
	UPDATE CUONSACH
	 	SET DAMUON = 0 
    WHERE MAS = (SELECT MAS FROM deleted)
END

GO
CREATE TRIGGER TR_AFTERUPDATE_CTMUONTRA
ON CTMUONTRA
AFTER UPDATE
AS
BEGIN
	if(UPDATE(NGAYTRA))
	BEGIN
       UPDATE CUONSACH
	     SET DAMUON = 0 
       	WHERE MAS = (SELECT MAS FROM inserted)
	END
END

--NGHIA
GO
CREATE TRIGGER TR_AFTER_INSERT_SACH
ON CUONSACH
AFTER INSERT
AS
BEGIN
	DECLARE @MADS NCHAR(10)
	SELECT @MADS = MADS FROM inserted WHERE DAMUON = 0 AND SOPHIEUTL = NULL AND (KIEUMUON = 'DTC' OR KIEUMUON = 'CPM')

	UPDATE DAUSACH SET SL_CO_SAN = SL_CO_SAN + 1 WHERE MADS = @MADS
END

GO
CREATE TRIGGER TR_AFTER_INSERT_CT_MUON_TRA
ON CTMUONTRA
AFTER INSERT
AS
BEGIN
	DECLARE @MADS NCHAR(10), @MAS NCHAR(10)
	SELECT @MAS = MAS FROM inserted WHERE NGAYTRA = NULL

	UPDATE DAUSACH SET SL_CO_SAN = SL_CO_SAN - 1 WHERE MADS = @MADS
END

GO
CREATE TRIGGER TR_AFTER_UPDATE_CT_MUON_TRA
ON CTMUONTRA
AFTER UPDATE
AS
BEGIN
	DECLARE @MADS NCHAR(10), @MAS NCHAR(10)
	SELECT @MAS = MAS FROM inserted WHERE NGAYTRA != NULL

	UPDATE DAUSACH SET SL_CO_SAN = SL_CO_SAN + 1 WHERE MADS = @MADS
END